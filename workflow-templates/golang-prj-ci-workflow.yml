name: GoLang Build template

on:
  push:
    branches: 
      - master
      - 'release-*'
  pull_request:

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GHE_TOKEN: ${{ secrets.GHE_TOKEN }}
  AFAAS_TOKEN: ${{ secrets.AFAAS_TOKEN }}
  AFAAS_USER: ${{ secrets.AFAAS_USER }}
  AFAAS_USER_NPM_TOKEN: ${{ secrets.AFAAS_USER_NPM_TOKEN }}
  AFAAS_DOCKER_REGISTRY: ${{ secrets.AFAAS_DOCKER_REGISTRY }}
  PYPI_USER: ${{ secrets.PYPI_USER }}
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  AFAAS_NPM_USER: ${{ secrets.AFAAS_NPM_USER }}
  AFAAS_NPM_TOKEN: ${{ secrets.AFAAS_NPM_TOKEN }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  AFAAS_URL: ${{ secrets.AFAAS_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version: [1.16.4,1.15.12,]
    steps:
      - name: Initial step to pull Common Build tool script from Artifactory
      - uses: jfrog/setup-jfrog-cli@v1
        env: 
          JF_ARTIFACTORY_TOKEN: ${{ secrets.JF_ARTIFACTORY_TOKEN }}
      - run: |
          jfrog rt dl ibmcb-generic-local/BuildTools-testing/get_test_our.sh
          bash BuildTools-testing/get_test_our.sh
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}

      - name: Build
        run: go build -v ./...
      
      - name: Test
        run: go test -v ./...

      - name: Build docker image if merging to master branch
        if: ${{ github.ref == 'refs/heads/master' }} && ${{ github.ref == 'refs/heads/release-*' }}
        run: |
          echo call the gobuild.sh code 